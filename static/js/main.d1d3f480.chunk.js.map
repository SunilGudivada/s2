{"version":3,"sources":["Components/SignIn/SignIn.js","Components/SignUp/SignUp.js","Components/Dashboard/listItems.js","Components/Options/Options.js","Components/Standardization/Standardization.js","Components/Modal/AddDataSourceModal.js","Components/DataSource/DataSource.js","Components/MapToSource/MapToSource.js","Components/RuleSet/RuleSet.js","Components/Dashboard/Dashboard.js","App.js","theme.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","SignInSide","classes","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","Button","Box","mt","SignUp","Container","maxWidth","justify","background","nested","paddingLeft","ListItemLink","props","ListItem","button","ListItems","React","useState","open","setOpen","selectedIndex","setSelectedIndex","handleListItemClick","event","index","selected","onClick","ListItemIcon","ListItemText","primary","disabled","Collapse","in","timeout","unmountOnExit","List","disablePadding","secondaryListItems","ListSubheader","inset","dummyLinks","formControl","minWidth","selectEmpty","Options","attribute","setAttribute","FormControl","size","InputLabel","Select","labelId","onChange","target","MenuItem","map","key","attrArray","bullet","transform","title","fontSize","pos","marginBottom","tableCellStyle","padding","tableContainer","Standardization","textAlign","m","style","fontWeight","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","dataSourceTypes","blue","flexGrow","withoutLabel","textField","addDataSourceForm","actionButton","marginRight","SimpleDialog","onClose","selectedValue","Dialog","aria-labelledby","DialogTitle","dataSource","ListItemAvatar","SimpleDialogDemo","setSelectedValue","amount","password","weight","weightRange","showPassword","values","setValues","handleChange","prop","handleClickShowPassword","handleMouseDownPassword","preventDefault","float","Card","clsx","CardContent","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","labelWidth","CardActions","disableElevation","startIcon","accept","multiple","createData","entity","username","jdbcurl","table","rows","DataSource","checkedA","checkedB","state","setState","checked","row","Switch","backButton","instructions","MapToSource","activeStep","setActiveStep","completed","setCompleted","steps","totalSteps","length","allStepsCompleted","Object","keys","Stepper","nonLinear","Step","StepButton","step","stepIndex","getStepContent","prevActiveStep","newActiveStep","findIndex","i","ruleSetName","ruleSetDescription","ruleSetScoreThreshold","aggregationMethod","addRule","heading","typography","pxToRem","secondaryHeading","text","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","ruleHelper","link","textDecoration","RuleSet","ruleSetNameEdit","setRuleSetNameEdit","setRuleSetName","ruleSetScoreThresholdEdit","setRuleSetScoreThresholdEdit","setRuleSetScoreThreshold","ruleSetDescriptionEdit","setRuleSetDescriptionEdit","setRuleSetDescription","setAggregationMethod","aggregationMethodEdit","setAggregationMethodEdit","ruleStatus","setRuleStatus","handleRuleStatusChange","e","Clear","multiline","Add","sectionId","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Divider","ExpansionPanelActions","createMuiTheme","listItemIcon","toolbar","paddingRight","breakpoints","up","minHeight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","overflow","paddingBottom","fixedHeight","Dashboard","ThemeProvider","AppBar","Toolbar","noWrap","Badge","badgeContent","Drawer","window","location","hash","pt","App","Fragment","exact","path","SignIn","error","red","A400","default","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d1d3f480.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        S2 \n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AccountTree from '@material-ui/icons/AccountTree';\nimport Category from '@material-ui/icons/Category';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\nimport LockOpen from '@material-ui/icons/LockOpen';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }));\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n}\nexport default function ListItems() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n  return(\n  <div>\n    \n    <ListItemLink href=\"#dashboard\" selected={selectedIndex === 0}\n          onClick={(event) => handleListItemClick(event, 0)}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" disabled={true}/>\n    </ListItemLink>\n    <ListItemLink href=\"#MapToSource\" selected={selectedIndex === 1}\n          onClick={(event) => handleListItemClick(event, 1)}>\n      <ListItemIcon>\n        <AccountTree />\n      </ListItemIcon>\n      <ListItemText primary=\"Map to Source\" />\n    </ListItemLink>\n    <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <Category />\n        </ListItemIcon>\n        <ListItemText primary=\"Rules\" />\n        {!open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={!open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ListItemLink href=\"#rules/1\" className={classes.nested} selected={selectedIndex === 2}\n          onClick={(event) => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <Category />\n            </ListItemIcon>\n            <ListItemText primary=\"Rule 1\" />\n          </ListItemLink>\n          <ListItemLink href=\"#rules/2\" className={classes.nested} selected={selectedIndex === 3}\n          onClick={(event) => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <Category />\n            </ListItemIcon>\n            <ListItemText primary=\"Rule 2\" />\n          </ListItemLink>\n        </List>\n      </Collapse>\n      <ListItemLink href=\"#execution\" selected={selectedIndex === 4}\n          onClick={(event) => handleListItemClick(event, 4)}>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Execution\" />\n    </ListItemLink>\n    <ListItemLink href=\"#reviewMatches\" selected={selectedIndex === 5}\n          onClick={(event) => handleListItemClick(event, 5)}>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Review matches\" />\n    </ListItemLink>\n  </div>\n  )};\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button >\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end\" />\n    </ListItem>\n  </div>\n);\n\n\nexport const dummyLinks = (\n    <div>\n        <ListSubheader inset>Temporary Link</ListSubheader>\n        <ListItemLink href=\"#signin\">\n      <ListItemIcon>\n        <AssignmentInd />\n      </ListItemIcon>\n      <ListItemText primary=\"Sign In\" />\n    </ListItemLink>\n    <ListItemLink href=\"#signup\">\n      <ListItemIcon>\n        <LockOpen />\n      </ListItemIcon>\n      <ListItemText primary=\"Sign Up\" />\n    </ListItemLink  >\n    </div>\n)","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 240,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(0),\n        backgroundColor: 'inherit'\n    },\n}));\n\n\nexport default function Options(){\n    const classes = useStyles();\n    const [attribute,setAttribute] = React.useState('');\n\n    const handleChange = (event) => {\n        setAttribute(event.target.value);\n    };\n    const attrArray = [\n        'First Name',\n        'Middle Name',\n        'Last Name',\n        'Alias Name',\n        'Full Name',\n        'DOB',\n        'Nationality',\n        'Personal Email',\n        'Business Email',\n        'Personal Phone',\n        'Mobile Phone',\n        'Work Address',\n        'Home Address'\n    ]\n    return (\n        <FormControl size=\"small\" variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Select Matching Attribute</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={attribute}\n          onChange={handleChange}\n          label=\"Select Matching Attribute\"\n        >\n            <MenuItem value=\"\" disabled>\n                Select Matching Attribute\n            </MenuItem>\n            \n            {attrArray.map((value,index)=>(\n                <MenuItem key= {index} value={value}>{value}</MenuItem>\n            ))}\n            \n        </Select>\n        </FormControl>\n    );\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Options from '../Options/Options';\n\nconst attrArray = [\n    'First Name',\n    'Middle Name',\n    'Last Name',\n    'Alias Name',\n    'Full Name',\n    'DOB',\n    'Nationality',\n    'Personal Email',\n    'Business Email',\n    'Personal Phone',\n    'Mobile Phone',\n    'Work Address',\n    'Home Address'\n]\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    tableCellStyle:{\n        padding:0\n    },\n    tableContainer:{\n\n    }\n});\n\nexport default function Standardization(props) {\n        \n        const classes = useStyles();\n        return(<>\n                <Typography component={'span'} variant={'body2'}>\n                    <Box textAlign=\"center\" m={1} fontSize=\"h5.fontSize\" style={{fontWeight: 'bold'}}>\n                        Standardization of Attributes from Multiple Sources\n                    </Box>\n                </Typography>\n                <TableContainer className={classes.tableContainer}>\n                    <Table aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.tableCellStyle}>Standardized Attributes</TableCell>\n                            <TableCell className={classes.tableCellStyle} align=\"center\">Source1 Attributes</TableCell>\n                            <TableCell className={classes.tableCellStyle} align=\"center\">Source2 Attributes</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {attrArray.map((value,index) => (\n                            <TableRow key={index}>\n                                <TableCell className={classes.tableCellStyle}>{value}</TableCell>\n                                <TableCell align=\"center\" className={classes.tableCellStyle}><Options /></TableCell>\n                                <TableCell align=\"center\"className={classes.tableCellStyle}><Options /></TableCell>\n                            </TableRow>\n\n                        ))}\n                      </TableBody>\n                    </Table>\n                </TableContainer>\n                </>\n        )\n    }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Description from '@material-ui/icons/Description';\nimport Storage from '@material-ui/icons/Storage';\nimport { blue } from '@material-ui/core/colors';\nimport { FormControl,Grid, Card, CardContent, CardActions, TextField, OutlinedInput, InputAdornment, IconButton, InputLabel} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport clsx from 'clsx';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Cancel from '@material-ui/icons/Cancel';\n\nconst dataSourceTypes = ['Database', 'File'];\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },root: {\n    minWidth: 275,\n    flexGrow: 1,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },margin: {\n    margin: theme.spacing(0),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n  addDataSourceForm:{\n    margin: '8px'\n  },\n  actionButton: {\n    marginRight: theme.spacing(1),\n  }\n}));\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  \n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Select Data Source Type</DialogTitle>\n      <List>\n        {dataSourceTypes.map((dataSource) => (\n          <ListItem button onClick={() => handleListItemClick(dataSource)} key={dataSource}>\n            <ListItemAvatar>\n\n              {dataSource === \"Database\" ? (\n                <Avatar className={classes.avatar}>\n                  <Storage />\n                </Avatar>\n              ):(\n                <Avatar className={classes.avatar}>\n                  <Description />\n                </Avatar>\n              )}\n              \n            </ListItemAvatar>\n            <ListItemText primary={dataSource} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState('');\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} style={{float:\"right\"}}>\n        Add Data Source\n      </Button>\n      <br />\n        <Grid container style={{marginTop:'36px', marginBottom:'10px'}}>\n          {selectedValue=== 'Database' ?(\n            <Card className={clsx(classes.root,classes.avatar)} variant=\"outlined\" >\n             \n              <CardContent style={{padding:'16px'}}>\n                <TextField size=\"small\" id=\"outlined-basic\" label=\"Data source Name\" variant=\"outlined\" className={classes.addDataSourceForm}/>\n                <TextField size=\"small\" id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" className={classes.addDataSourceForm}/>\n                <FormControl size=\"small\" className={clsx(classes.margin, classes.textField,classes.addDataSourceForm)} variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                <OutlinedInput id=\"outlined-adornment-password\" type={values.showPassword ? 'text' : 'password'}\n                  onChange={handleChange('password')}\n\n                  endAdornment={\n                    <InputAdornment position=\"end\" >\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={150}\n                />\n                </FormControl>\n                <TextField style={{width:'70%'}} id=\"outlined-basic\" size=\"small\" label=\"JDBC String\" variant=\"outlined\" className={classes.addDataSourceForm}/>\n                <Button href=\"/\" color=\"primary\" onClick={(event)=>event.preventDefault()} className={classes.addDataSourceForm}> Test Connection </Button>\n              </CardContent>\n              <CardActions style={{margin:'0px 16px 16px 16px'}}>\n                <Button disableElevation variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.button} startIcon={<CheckCircle fontSize=\"large\" />} > Save </Button>\n                <Button disableElevation variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.button} startIcon={<Cancel fontSize=\"large\"/>} onClick={() => setSelectedValue(' ')}> cancel </Button>\n                </CardActions>\n            </Card>\n          ): selectedValue=== 'File' ? (\n            \n            <Card className={clsx(classes.root,classes.avatar)} variant=\"outlined\" >\n             \n              <CardContent style={{padding:'16px'}}>\n              \n                <TextField size=\"small\" id=\"outlined-basic\" label=\"Data source Name\" variant=\"outlined\" className={classes.addDataSourceForm}/>\n                <TextField size=\"small\" id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" className={classes.addDataSourceForm}/>  \n                <FormControl size=\"small\" className={clsx(classes.margin, classes.textField,classes.addDataSourceForm)} variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                <OutlinedInput id=\"outlined-adornment-password\" type={values.showPassword ? 'text' : 'password'}\n                  onChange={handleChange('password')}\n\n                  endAdornment={\n                    <InputAdornment position=\"end\" >\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={150}\n                />\n                </FormControl>\n                <div className={classes.addDataSourceForm}>\n                  <input accept=\"file/*\" style={{display: 'none'}} id=\"contained-button-file\" multiple type=\"file\"/> \n                  <label htmlFor=\"contained-button-file\">\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" component=\"span\">\n                      Upload File\n                    </Button>\n                  </label>\n                </div>\n                \n              </CardContent>\n              <CardActions style={{margin:'0px 16px 16px 16px'}}>\n                <Button disableElevation variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.button} startIcon={<CheckCircle fontSize=\"large\" />} > Save </Button>\n                <Button disableElevation variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.button} startIcon={<Cancel fontSize=\"large\"/>} onClick={() => setSelectedValue(' ')}> cancel </Button>\n                </CardActions>\n            </Card>\n\n\n\n          ): (\" \")}\n        </Grid>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteSweep from '@material-ui/icons/DeleteSweep';\nimport Edit from '@material-ui/icons/Edit';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Box from '@material-ui/core/Box';\nimport SimpleDialogDemo from '../Modal/AddDataSourceModal'\nimport { Typography } from '@material-ui/core';\n\nfunction createData(entity, username, password, jdbcurl) {\n    return { entity, username, password, jdbcurl };\n}\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\nconst rows = [\n    createData('Database 1', 'username 1', '********', 'jdbc:db2:hostname:port Number/databaseName', 'A'),\n    createData('Database 2', 'username 2', '********', 'SourceColumnMapping.csv', 'A'),\n    createData('Database 3', 'username 3', '********', 'jdbc:db2:hostname:port Number/databaseName', 'A'),\n    createData('Database 4', 'username 4', '********', 'jdbc:db2:hostname:port Number/databaseName', 'X'),\n    createData('Database 5', 'username 5', '********', 'jdbc:db2:hostname:port Number/databaseName', 'X'),\n];\n\n\nexport default function DataSource() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (<>\n        \n        <Typography component={'span'} variant={'body2'}>\n            <Box textAlign=\"center\" m={1} fontSize=\"h5.fontSize\" style={{fontWeight: 'bold'}}>\n                Data Sources Definitions\n            </Box>\n        </Typography>\n        <SimpleDialogDemo />\n        <Typography component={'span'} variant={'body2'}>\n            <Box textAlign=\"center\" m={1} fontSize=\"h5.fontSize\" style={{fontWeight: 'bold'}}>\n                Available Data Sources\n            </Box>\n        </Typography>\n        <TableContainer component={Paper} style={{ marginBottom: '20px' }}>\n\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Data Source Name</TableCell>\n                        <TableCell >Username</TableCell>\n                        <TableCell >Password</TableCell>\n                        <TableCell >JDBC URL / File Name</TableCell>\n                        <TableCell />\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.entity} style={{ height: 15 }}>\n\n                            <TableCell component=\"th\">\n                                {row.entity}\n                            </TableCell>\n                            <TableCell >{row.username}</TableCell>\n                            <TableCell >{row.password}</TableCell>\n                            <TableCell >{row.jdbcurl}</TableCell>\n                            <TableCell align=\"right\">\n                                <IconButton aria-label=\"comments\">\n                                    <Edit />\n                                </IconButton>\n                                <IconButton aria-label=\"comments\">\n                                    <DeleteSweep />\n                                </IconButton>\n                                <FormControlLabel control={\n                                    <Switch\n                                        checked={state.checked}\n                                        onChange={handleChange}\n                                        name=\"checkedB\"\n                                        color=\"primary\"\n                                    />\n                                } style={{ margin: '2px' }}\n                                />\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    </>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Standardization from '../Standardization/Standardization';\nimport DataSource from '../DataSource/DataSource';\nimport StepButton from '@material-ui/core/StepButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Define Data Source', 'Map to Standard'];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return (<DataSource />);\n    case 1:\n      return (<Standardization />);\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function MapToSource() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const steps = getSteps();\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed,\n        // find the first step that has been completed\n        steps.findIndex((step, i) => !(i in completed))\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  // const handleComplete = () => {\n  //   const newCompleted = completed;\n  //   newCompleted[activeStep] = true;\n  //   setCompleted(newCompleted);\n  //   handleNext();\n  // };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Stepper nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepButton onClick={handleStep(index)} completed={completed[index]}>\n                {label}\n              </StepButton>\n            </Step>\n          ))}\n        </Stepper>\n        <div>\n          {allStepsCompleted() ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n            </Typography>\n              <Button onClick={handleReset}>Reset</Button>\n            </div>\n          ) : (\n              <div>\n                <Typography component={'span'} variant={'body2'} className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                <div>\n                  <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                    Back\n              </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    Next\n              </Button>\n                  {activeStep !== steps.length &&\n                    (completed[activeStep] ? (\n                      <Typography component={'span'} variant=\"caption\" className={classes.completed}>\n                        Step {activeStep + 1} already completed\n                      </Typography>\n                    ) : (\n                        // <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\n                        //   {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                        // </Button>\n                        \" \"\n                      ))}\n                </div>\n              </div>\n            )}\n        </div>\n      </CardContent >\n    </Card>\n  );\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {\n    Button,\n    Box,\n    Card, \n    CardActions,\n    CardContent,\n    Divider,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    ExpansionPanelActions,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    Switch,\n    Typography,\n    TextField,\n} from '@material-ui/core';\n\nimport { Edit, Clear, Add, } from '@material-ui/icons'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme)=>({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    ruleSetName: {\n        color: \"grey\",\n    },\n    ruleSetDescription: {\n        color: \"grey\",\n    },\n    ruleSetScoreThreshold: {\n        color: \"grey\",\n    },\n    aggregationMethod: {\n        margin: theme.spacing(1),\n        width: 200,\n    },\n    addRule:{\n        float: 'right',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n      },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n        backgroundColor: grey[200],\n    },\n    column: {\n        flexBasis: '33.33%',\n        fontSize: theme.typography.pxToRem(15),\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: theme.spacing(1, 2),\n    },\n    ruleHelper: {\n        padding: theme.spacing(1, 2),\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n}));\n\nfunction RuleSet() {\n    const classes = useStyles();\n    const [ruleSetNameEdit, setRuleSetNameEdit] = React.useState(false);\n    const [ruleSetName, setRuleSetName] = React.useState('Rule Set Name');\n    const [ruleSetScoreThresholdEdit, setRuleSetScoreThresholdEdit] = React.useState(false);\n    const [ruleSetScoreThreshold, setRuleSetScoreThreshold] = React.useState(10);\n    const [ruleSetDescriptionEdit, setRuleSetDescriptionEdit] = React.useState(false);\n    const [ruleSetDescription, setRuleSetDescription] = React.useState('This is the place for Rule Set Description. Please click on the edit button to edit the content.');\n    const [aggregationMethod, setAggregationMethod] = React.useState('No Method selected');\n    const [aggregationMethodEdit, setAggregationMethodEdit] = React.useState(false);\n\n    const handleAggregationMethod = (event) => {\n        setAggregationMethod(event.target.value);\n      };\n    const [ruleStatus, setRuleStatus] = React.useState({\n        checkedA: true,\n        checkedB: true,\n    });\n    const handleRuleStatusChange = (event) => {\n        setRuleStatus({ ...ruleStatus, [event.target.name]: event.target.checked });\n    };\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography component={'span'} variant={'body2'}>\n                    <Box textAlign=\"center\" m={1} fontSize=\"h5.fontSize\" style={{ fontWeight: 'bold' }}>\n                        Deduplication Rules\n                    </Box>\n                </Typography>\n                <Grid container>\n                    <Grid item xs={4}>\n                        {!ruleSetNameEdit ? (\n                            <div>\n                                <div className={classes.ruleSetName}><b>Ruleset Name: <br/></b> {ruleSetName}\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setRuleSetNameEdit(true)}>\n                                        <Edit fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            </div>\n                        ) : (\n                                <div>\n                                    <TextField id=\"outlined-basic\" size=\"small\" label=\"Rule Set Name\" value={ruleSetName} variant=\"outlined\" onChange={e => setRuleSetName(e.target.value)} />\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setRuleSetNameEdit(false)}>\n                                        <Clear fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            )}\n\n                    </Grid>\n                    <Grid item xs={4}>\n\n                    </Grid>\n                    <Grid item xs={4}>\n                        {!ruleSetDescriptionEdit ? (\n                            <div>\n                                <div className={classes.ruleSetDescription}><b>Ruleset Description: <br/></b> {ruleSetDescription}\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setRuleSetDescriptionEdit(true)}>\n                                        <Edit fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            </div>\n                        ) : (\n                                <div>\n                                    <FormControl fullWidth className={classes.margin}>\n                                        <TextField id=\"outlined-multiline-static\" label=\"Rulset Description\" multiline rows={3} variant=\"outlined\" value={ruleSetDescription} onChange={e => setRuleSetDescription(e.target.value)} />\n                                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setRuleSetDescriptionEdit(false)}>\n                                            <Clear fontSize=\"small\" />\n                                        </IconButton>\n                                    </FormControl>\n                                </div>\n                            )}\n\n                    </Grid>\n\n\n                    <Grid item xs={4}>\n                    {!aggregationMethodEdit ? (\n                            <div>\n                                <div className={classes.ruleSetName}><b>Aggregation Method: <br/></b> {aggregationMethod}\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setAggregationMethodEdit(true)}>\n                                        <Edit fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            </div>\n                        ) : (\n                        <div>\n                            <FormControl size=\"small\" variant=\"outlined\" className={classes.aggregationMethod}>\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Aggregation Method</InputLabel>\n                            <Select labelId=\"demo-simple-select-outlined-label\" id=\"demo-simple-select-outlined\"\n                            value={aggregationMethod}\n                            onChange={handleAggregationMethod}\n                            label=\"Select Aggregation Method\"\n                            >\n                            <MenuItem value=\"\" disabled>\n                                Aggregation Method\n                            </MenuItem>\n                            <MenuItem value='Minimum'>Minimum</MenuItem>\n                            <MenuItem value='Maximum'>Maximum</MenuItem>\n                            <MenuItem value='Average'>Average</MenuItem>    \n                            </Select>\n                        </FormControl>\n                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setAggregationMethodEdit(false)}>\n                            <Clear fontSize=\"small\" />\n                        </IconButton>\n                        </div>\n\n                        )}\n                    </Grid>\n                    <Grid item xs={4}>\n\n                    </Grid>\n                    <Grid item xs={4}>\n                        {!ruleSetScoreThresholdEdit ? (\n                            <div>\n                                <div className={classes.ruleSetScoreThreshold}><b>Ruleset Score Threshold: <br/></b> {ruleSetScoreThreshold}\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setRuleSetScoreThresholdEdit(true)}>\n                                        <Edit fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            </div>\n                        ) : (\n                                <div>\n                                    <TextField id=\"outlined-basic\" size=\"small\" label=\"Ruleset Score Threshold\" value={ruleSetScoreThreshold} variant=\"outlined\" onChange={e => setRuleSetScoreThreshold(e.target.value)} />\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => setRuleSetScoreThresholdEdit(false)}>\n                                        <Clear fontSize=\"small\" />\n                                    </IconButton>\n                                </div>\n                            )}\n\n                    </Grid>\n                </Grid>\n                \n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" className={classes.addRule} >\n                    <Add fontSize=\"small\"/> Add Rule\n                </Button>\n                <br/>\n                <Typography component={'span'} variant={'body2'}>\n                    <Box textAlign=\"center\" m={1} fontSize=\"h5.fontSize\" style={{ fontWeight: 'bold' }}>\n                        Available Rules\n                    </Box>\n                </Typography>\n                \n            { [0,1,2,3].map((sectionId)=> (<div key={`section-${sectionId}`}>\n                <ExpansionPanel >\n                    <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1c-content\"\n                    id=\"panel1c-header\"\n                    >\n                    <div className={classes.column}>\n                        <Typography className={classes.heading}>Rule Name</Typography>\n                    </div>\n                    <div className={classes.column}>\n                        <Typography className={classes.secondaryHeading}>This is the place for Description</Typography>\n                    </div>\n                    <div className={classes.column}>\n                        <Typography className={classes.secondaryHeading}>Rule Weightage - 25</Typography>\n                    </div>\n\n                    </ExpansionPanelSummary>\n                    <div className={clsx(classes.column)} style={{backgroundColor: grey[300]}}>\n                        <Grid container>\n                            <Grid item xs={2} className={classes.ruleHelper}>\n                                <Typography variant=\"caption\"><b>Rule Name: </b><br/> Hello world</Typography>\n                            </Grid>\n                            <Grid item xs={4} className={classes.ruleHelper}>\n                                <Typography variant=\"caption\"><b>Rule Description</b><br/>Description about the rule will be mentioned here</Typography>\n                            </Grid>\n                            <Grid item xs={2} className={classes.ruleHelper}>\n                                <Typography variant=\"caption\"><b>Rule Weightage</b><br/> 25</Typography>\n                            </Grid>\n                            <Grid item xs={4} className={classes.ruleHelper}>\n                                <Button variant=\"outlined\" size=\"small\" className={classes.addRule} >\n                                    <Add fontSize=\"small\"/> Add Attribute \n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <ExpansionPanelDetails className={classes.details}>\n                    <div className={classes.column} >\n                        <Typography variant=\"caption\"><b>Attribute</b><br/> Customer Id</Typography>\n                    </div>\n                    <div className={classes.column} >\n                        <Typography variant=\"caption\"><b>Matching Method</b><br/> \n                            Exact Match\n                        </Typography>\n                    </div>\n                    <div className={classes.column} >\n                    </div>\n                    <div className={classes.column} >\n                    </div>\n                    <div className={classes.column} >\n                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() =>{}}>\n                            <Edit fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => {}}>\n                            <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                        <FormControlLabel control={\n                            <Switch\n                                checked={ruleStatus.checked}\n                                onChange={handleRuleStatusChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        } style={{ margin: '2px' }}\n                        />\n                    </div>\n                    \n                    </ExpansionPanelDetails>\n                        <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <div className={classes.column} >\n                        <Typography variant=\"caption\"><b>Attribute</b><br/> Full Name</Typography>\n                    </div>\n                    <div className={classes.column} >\n                        <Typography variant=\"caption\"><b>Matching Method</b><br/> \n                            Fuzzy\n                        </Typography>\n                    </div>\n                    <div className={classes.column} >\n                        <Typography variant=\"caption\"><b>Fuzzy Value: </b><br/> \n                            25\n                        </Typography>\n                    </div>\n                    <div className={classes.column} >\n                        <Typography variant=\"caption\"><b>Fuzzy Cut Off </b><br/> \n                            23\n                        </Typography>\n                    </div>\n                    <div className={classes.column} >\n                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() =>{}}>\n                            <Edit fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => {}}>\n                            <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                        <FormControlLabel control={\n                            <Switch\n                                checked={ruleStatus.checked}\n                                onChange={handleRuleStatusChange}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        } style={{ margin: '2px' }}\n                        />\n                    </div>\n                    \n                    </ExpansionPanelDetails>\n                    \n                    \n                    <Divider />\n                    <ExpansionPanelActions>\n                    <Button size=\"small\">Cancel</Button>\n                    <Button size=\"small\" color=\"primary\">\n                        Save\n                    </Button>\n                    </ExpansionPanelActions>\n                </ExpansionPanel>\n\n               </div> ))}\n\n\n\n\n\n                \n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">Learn More</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default RuleSet\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ListItems, { secondaryListItems, dummyLinks } from './listItems';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport MapToSource from '../MapToSource/MapToSource'\nimport RuleSet from '../RuleSet/RuleSet';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        S3 Admin Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 200;\n\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 12,\n  },\n  listItemIcon: {\n    minWidth: '34px'\n  },\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: '0!important'\n    }\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0px',\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: '0!important'\n    }\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              S3 Admin Dashboard\n          </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List><ListItems /></List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n          <Divider />\n          <List>{dummyLinks}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n          {window.location.hash === \"#/MapToSource\"? (\n            <MapToSource />\n          ) : window.location.hash === \"#/ruleset/add\" ? (\n            <RuleSet />\n          ): ( \" \")}\n          <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </ThemeProvider>\n    </div>\n  );\n}","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport SignIn from './Components/SignIn/SignIn';\nimport SignUp from './Components/SignUp/SignUp';\nimport Dashboard from './Components/Dashboard/Dashboard';\n\nexport default function App() {\n  return (\n      <React.Fragment>\n      <HashRouter>\n        \n        {/* <Dashboard/> */}\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/MapToSource' component={Dashboard} />\n          <Route exact path='/standardization' component={Dashboard} />\n          <Route exact path='/ruleset/add' component={Dashboard} />\n          <Route exact path='/rules/1' component={Dashboard} />\n          <Route exact path='/rules/2' component={Dashboard} />\n          <Route exact path='/execution' component={Dashboard} />\n          <Route exact path='/reviewMatches' component={Dashboard} />\n          <Route exact path='/signin' component={SignIn} />\n          <Route exact path='/signup' component={SignUp} />\n        </Switch>\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}